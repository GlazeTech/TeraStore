version: "3.8"

name: terastore-test

services:
  frontend-test:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend.dev
    container_name: terastore-frontend-test
    environment:
      - BACKEND_URL=terastore-backend-test:8000
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
      - ./scripts:/app/scripts
    command: ash scripts/entrypoint.sh

  backend-test:
    image: ghcr.io/glazetech/terastore/terastore-backend-test:latest
    container_name: terastore-backend-test
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - "DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-test:5432/${POSTGRES_DB}"
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - TERASTORE_ADMIN_USERNAME=${TERASTORE_ADMIN_USERNAME}
      - TERASTORE_ADMIN_PASSWORD=${TERASTORE_ADMIN_PASSWORD}
    volumes:
      - ./backend:/app
      - ./scripts:/scripts
    ports:
      - 8001:8000
    depends_on:
      db-test:
        condition: service_healthy

  db-test:
    image: postgres:16-alpine
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 2s
      timeout: 1s
      retries: 5
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    container_name: terastore-postgres-test
    ports:
      - 5433:5432
    volumes:
      - db:/var/lib/postgresql/data

volumes:
  db:
  node_modules:

networks:
  default:
    name: terastore-test-network