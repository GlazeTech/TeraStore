# Heavily inspired by https://jacobian.org/til/github-actions-poetry/
name: tests
run-name: Application tests
on:
  - pull_request

jobs:
  backend-mypy:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Cache Poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1.6.1-0
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ./backend/.venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - name: Install project
        run: poetry install --no-interaction
      - name: mypy check
        run: poetry run mypy ./api
  backend-linting-formatting:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Ruff check
        uses: chartboost/ruff-action@v1
        with:
          src: "./backend/api"
          version: 0.0.292
      - name: Black formatting
        uses: psf/black@stable
        with:
          src: "./backend/api"
          version: 23.9.1
  backend-test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Cache Poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1.6.1-0
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ./backend/.venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - name: Install project
        run: poetry install --no-interaction
      - name: Run tests
        run: poetry run pytest
  frontend-linting-formatting:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v1
        with:
          version: 1.2.2
      - name: Run Biome
        run: biome ci frontend
  frontend-test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"
      - name: Install dependencies
        run: npm --prefix frontend/ clean-install
      - name: Build app
        run: npm --prefix frontend/ run build
      - name: Test app
        run: npm --prefix frontend/ run test
  docker-test-build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    env:
      POSTGRES_USER: pg_user
      POSTGRES_PASSWORD: pg_user_pw
      POSTGRES_DB: terastore-db
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build containers
        run: docker-compose build
      - name: Start application
        run: docker-compose up --detach
      - name: Close application
        run: docker-compose down
