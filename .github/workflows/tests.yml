# Heavily inspired by https://jacobian.org/til/github-actions-poetry/
name: tests
run-name: Application tests
on:
  - pull_request

jobs:
  backend-ci:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build and run containers
        run: docker-compose -f docker-compose.dev.yml up -d
        env:
          POSTGRES_USER: terastore-user
          POSTGRES_PASSWORD: terastore-password
          POSTGRES_DB: terastore-db
          ENV: dev
      - name: Run Black
        run: docker exec terastore-backend-dev black --check .
      - name: Run Mypy
        run: docker exec terastore-backend-dev mypy .
      - name: Run Pytest
        run: docker exec terastore-backend-dev pytest
      - name: Clean up
        run: docker-compose -f docker-compose.dev.yml down
  frontend-linting-formatting:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v1
        with:
          version: 1.2.2
      - name: Run Biome
        run: biome ci frontend
  frontend-test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"
      - name: Install dependencies
        run: npm --prefix frontend/ clean-install
      - name: Build app
        run: npm --prefix frontend/ run build
      - name: Test app
        run: npm --prefix frontend/ run test
  docker-test-build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-test]
    env:
      POSTGRES_USER: pg_user
      POSTGRES_PASSWORD: pg_user_pw
      POSTGRES_DB: terastore-db
      ENV: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build containers
        run: docker-compose build
      - name: Start application
        run: docker-compose up --detach
      - name: Close application
        run: docker-compose down
