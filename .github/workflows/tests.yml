# Heavily inspired by https://jacobian.org/til/github-actions-poetry/
name: tests
run-name: Application tests
on:
  - pull_request

env:
  IMAGE_NAME: ghcr.io/glazetech/terastore/terastore-backend-test
  POSTGRES_USER: ${{ vars.POSTGRES_USER_DEV }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_DEV }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB_DEV}}
  TERASTORE_JWT_SECRET: ${{ secrets.TERASTORE_JWT_SECRET }}
  ALLOWED_ORIGINS: ${{ vars.ALLOWED_ORIGINS_DEV }}

jobs:
  backend-image-check-and-push:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Check if image exists
        id: check-image
        run: |
          if docker manifest inspect ${{ env.IMAGE_NAME }}; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi
      - name: Print build and push conditions
        run: |
          echo "Cache hit: ${{ steps.cache-deps.outputs.cache-hit }}"
          echo "Image exists: ${{ steps.check-image.outputs.exists }}"
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: 'docker/Dockerfile.backend.test'
          tags: |
            ${{ env.IMAGE_NAME }}:latest
        if: steps.cache-deps.outputs.cache-hit != 'true' || steps.check-image.outputs.exists != 'true'
  tests:
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        test: [ruff_check, ruff_format, mypy, pytest, vitest]
    needs: backend-image-check-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Start application
        run: docker compose -f docker-compose-test.yml up --detach
      - name: Run Test
        run: ./scripts/run_${{ matrix.test }}.sh
      - name: Close application
        run: docker compose -f docker-compose-test.yml down
  frontend-linting-formatting:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v1
        with:
          version: 1.2.2
      - name: Run Biome
        run: biome ci frontend
  docker-test-build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [tests]
    env:
      POSTGRES_USER: ${{ vars.POSTGRES_USER_DEV }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_DEV }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB_DEV}}
      TERASTORE_JWT_SECRET: ${{ secrets.TERASTORE_JWT_SECRET }}
      ALLOWED_ORIGINS: ${{ vars.ALLOWED_ORIGINS_DEV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build containers
        run: docker compose -f docker-compose-prod.yml build
      - name: Start application
        run: docker compose -f docker-compose-prod.yml up --detach
      - name: Close application
        run: docker compose -f docker-compose-prod.yml down
