# Heavily inspired by https://jacobian.org/til/github-actions-poetry/
name: tests
run-name: Application tests
on:
  - pull_request

jobs:
  backend-ci:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
      - name: Build Docker Image
        run: docker-compose -f docker-compose-test.yml build
        if: steps.cache-deps.outputs.cache-hit != true
      - name: Start application
        run: docker-compose -f docker-compose-test.yml up --detach
      - name: Run Black
        run: ./scripts/run_black.sh
        continue-on-error: true
      - name: Run Ruff
        run: ./scripts/run_ruff.sh
        continue-on-error: true
      - name: Run Mypy
        run: ./scripts/run_mypy.sh
        continue-on-error: true
      - name: Run Pytest
        run: ./scripts/run_pytest.sh
        continue-on-error: true
      - name: Close application
        run: docker-compose -f docker-compose-test.yml down
  frontend-linting-formatting:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v1
        with:
          version: 1.2.2
      - name: Run Biome
        run: biome ci frontend
  frontend-test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"
      - name: Install dependencies
        run: npm --prefix frontend/ clean-install
      - name: Build app
        run: npm --prefix frontend/ run build
      - name: Test app
        run: npm --prefix frontend/ run test
  docker-test-build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-test]
    env:
      POSTGRES_USER: pg_user
      POSTGRES_PASSWORD: pg_user_pw
      POSTGRES_DB: terastore-db
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build containers
        run: docker-compose build
      - name: Start application
        run: docker-compose up --detach
      - name: Close application
        run: docker-compose down
