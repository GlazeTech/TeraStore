[tool.poetry]
name = "api"
version = "0.1.0"
description = "Python TeraStore API"
authors = ["Mads Ehrhorn <mehkj@dtu.dk>", "Bjørn Mølvig <bhymo@dtu.dk>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "~3.11"
fastapi = {extras = ["all"], version = "0.99.1"}
sqlmodel = "0.0.8"
numpy = "^1.26.0"
types-pytz = "^2023.3.1.1"
psycopg2 = "^2.9.9"
pytz = "^2023.3.post1"

[tool.poetry.group.dev.dependencies]
mypy = "1.5.1"
black = "23.9.1"
ruff = "0.0.292"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"

[tool.poetry.scripts]
start = "api.main:start"

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

# from https://careers.wolt.com/en/blog/tech/professional-grade-mypy-configuration & https://docs.pydantic.dev/latest/integrations/mypy/
disallow_any_unimported = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
no_implicit_optional = true
disallow_untyped_defs = true
show_error_codes = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["ALL"]
ignore = ["D100", "D104"]

[tool.ruff.per-file-ignores]
# from https://github.com/astral-sh/ruff/issues/4368
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
"api/**/crud.py" = [
    "B008", # To be able to use FastAPI Depends() in function calls
]
"api/**/views.py" = [
    "B008", # To be able to use FastAPI Depends() in function calls
]
"api/main.py" = ["ARG001"] # Unused function args

[tool.black]
line-length = 88
target-version = ["py311"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
