[project]
name = "api"
description = "Python TeraStore API"
authors = [
  { name = "Mads Ehrhorn", email = "mehkj@dtu.dk" },
  { name = "Bjørn Mølvig", email = "bhymo@dtu.dk" },
]
requires-python = ">=3.12,<3.13"
readme = "README.md"
dynamic = ["version"]

dependencies = [
  "fastapi[all]==0.99.1",
  "sqlmodel==0.0.12",
  "psycopg2-binary==2.9.9",
]

[project.optional-dependencies]
test = [
  "mypy==1.7.0",
  "black==23.11.0",
  "ruff==0.1.6",
  "pytest==7.4.3",
  "types-psycopg2==2.9.21.16",
  "pytest-cov==4.1.0",
]
dev = [
  "mypy==1.7.0",
  "black==23.11.0",
  "ruff==0.1.6",
  "pytest==7.4.3",
  "types-psycopg2==2.9.21.16",
  "pytest-cov==4.1.0",
]

[tool.mypy]
plugins = ["pydantic.mypy"]
exclude = ["build", "api.egg-info"]

# from https://careers.wolt.com/en/blog/tech/professional-grade-mypy-configuration & https://docs.pydantic.dev/latest/integrations/mypy/
disallow_any_unimported = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
no_implicit_optional = true
disallow_untyped_defs = true
show_error_codes = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["ALL"]
ignore = [
  "D100", # allow undocumented public modules
  "D101", # allow undocumented public class
  "D102", # allow undocumented public method
  "D103", # allow undocumented public function
  "D104", # allow undocumented public package
  "D106", # allow undocumented public nested class
  "D107", # allow undocumented public __init__
  "D203", # allow 0 black lines before class docstring
  "D213", # allow multiline docstring to start on first line
]

[tool.ruff.per-file-ignores]
# from https://github.com/astral-sh/ruff/issues/4368
"tests/**/*.py" = [
  "S101",    # asserts allowed in tests...
  "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
  "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
  "PLR2004", # Magic value used in comparison
  "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
]
"api/**/crud.py" = [
  "B008", # To be able to use FastAPI Depends() in function calls
]
"api/**/views.py" = [
  "B008", # To be able to use FastAPI Depends() in function calls
]
"api/main.py" = ["ARG001"] # Unused function args

[tool.black]
line-length = 88
target-version = ["py311"]
# TODO: the below doesn't work...
include = '(?:tests|api)\/.*\.pyi?$'

[tool.coverage.run]
omit = [
  "./api/utils/mock_data_generator.py", # do no require testing of mock data creation
]


[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
